package 剑指offer._16合并两个排序的链表;

class ListNode {
    int val;
    ListNode next = null;

    ListNode(int val) {
        this.val = val;
    }
}

class Solution {
    public ListNode Merge(ListNode list1,ListNode list2) {
        if(list1 == null && list2 == null)
            return null;
        if(list1 == null && list2 != null)
            return list2;
        if(list1 != null && list2 == null)
            return list1;
        ListNode result = null;
        if(list1.val < list2.val) {
            result = list1;
            list1 = list1.next;
        }
        else {
            result = list2;
            list2 = list2.next;
        }
        ListNode cur = result;
        while(list1 != null && list2 != null){
            if(list1.val < list2.val) {
                cur.next = list1;
                list1 = list1.next;
            }else{
                cur.next = list2;
                list2 = list2.next;
            }
            cur = cur.next;
        }
        if(list1!=null){
            while(list1 != null){
                cur.next = list1;
                cur = cur.next;
                list1 = list1.next;
            }
        }else if(list2!=null){
            while(list2 != null){
                cur.next = list2;
                cur = cur.next;
                list2 = list2.next;
            }
        }
        return result;
    }
}

public class Main {
    public static void main(String[] args) {

    }
}
